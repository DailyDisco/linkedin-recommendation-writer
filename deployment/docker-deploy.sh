#!/bin/bash

# üöÄ LinkedIn Recommendation Writer - Docker Deployment
# Uses custom Dockerfile for reliable single-project deployment

echo "üöÄ LinkedIn Recommendation Writer - Docker Deployment"
echo "===================================================="
echo ""
echo "This uses a custom Dockerfile - most reliable approach!"
echo ""

# Check if user has API keys ready
echo "üîë API Keys Required"
echo "==================="
echo ""
echo "You'll need:"
echo "- GitHub Token: https://github.com/settings/tokens"
echo "- Gemini API Key: https://makersuite.google.com/app/apikey"
echo ""

read -p "Do you have your API keys ready? (y/n): " KEYS_READY
if [[ ! "$KEYS_READY" =~ ^[Yy]$ ]]; then
    echo ""
    echo "Please get your API keys first, then run this script again."
    echo "GitHub: https://github.com/settings/tokens"
    echo "Gemini: https://makersuite.google.com/app/apikey"
    exit 1
fi

echo ""
echo "üìã Docker Deployment Steps"
echo "=========================="

echo ""
echo "Step 1: Create Railway Project"
echo "------------------------------"
echo "1. Open: https://railway.app/dashboard"
echo "2. Click 'New Project'"
echo "3. Choose 'Deploy from GitHub repo'"
echo "4. Select your GitHub repository"
echo "5. ‚ö†Ô∏è  IMPORTANT: Railway will detect the Dockerfile automatically!"
echo "6. Name: linkedin-recommendation-writer"
echo "7. Click 'Deploy'"
echo ""

read -p "‚úÖ Have you created the project? (y/n): " PROJECT_CREATED
if [[ ! "$PROJECT_CREATED" =~ ^[Yy]$ ]]; then
    echo ""
    echo "Please create the project first."
    xdg-open https://railway.app/dashboard 2>/dev/null || echo "Visit: https://railway.app/dashboard"
    exit 1
fi

echo ""
echo "Step 2: Railway Auto-Detects Dockerfile"
echo "---------------------------------------"
echo "Railway should automatically:"
echo "‚úÖ Detect your custom Dockerfile"
echo "‚úÖ Build using Docker instead of Nixpacks"
echo "‚úÖ Install Python dependencies"
echo "‚úÖ Install Node.js dependencies"
echo "‚úÖ Build your React frontend"
echo "‚úÖ Copy frontend to backend"
echo "‚úÖ Start FastAPI server"
echo ""

read -p "‚úÖ Did Railway detect and start building with Docker? (y/n): " DOCKER_DETECTED
if [[ ! "$DOCKER_DETECTED" =~ ^[Yy]$ ]]; then
    echo ""
    echo "If Railway didn't detect the Dockerfile:"
    echo "1. Go to your Railway project settings"
    echo "2. Make sure Dockerfile is in the root directory"
    echo "3. Try redeploying"
    exit 1
fi

echo ""
echo "Step 3: Add Services (PostgreSQL & Redis)"
echo "-----------------------------------------"
echo "While building, add the services:"
echo "1. Click 'Add Plugin' ‚Üí Add 'PostgreSQL'"
echo "2. Click 'Add Plugin' ‚Üí Add 'Redis'"
echo ""

read -p "‚úÖ Have you added PostgreSQL and Redis? (y/n): " SERVICES_ADDED
if [[ ! "$SERVICES_ADDED" =~ ^[Yy]$ ]]; then
    echo "Please add the services."
    exit 1
fi

echo ""
echo "Step 4: Set Environment Variables"
echo "---------------------------------"
echo "In Railway project Variables tab, add:"
echo ""

read -p "GitHub Token: " GITHUB_TOKEN
read -p "Gemini API Key: " GEMINI_API_KEY

echo ""
echo "Add these to Railway Variables:"
echo "GITHUB_TOKEN = $GITHUB_TOKEN"
echo "GEMINI_API_KEY = $GEMINI_API_KEY"
echo "ENVIRONMENT = production"
echo "API_DEBUG = false"
echo "API_RELOAD = false"
echo "LOG_LEVEL = INFO"
echo ""

read -p "‚úÖ Have you set all environment variables? (y/n): " VARS_SET
if [[ ! "$VARS_SET" =~ ^[Yy]$ ]]; then
    echo "Please set the environment variables."
    exit 1
fi

echo ""
echo "Step 5: Wait for Deployment"
echo "---------------------------"
echo "Railway will:"
echo "‚úÖ Build your custom Docker image"
echo "‚úÖ Install all dependencies"
echo "‚úÖ Build and copy frontend"
echo "‚úÖ Start the FastAPI server"
echo "‚úÖ Make your app available!"
echo ""

read -p "‚úÖ Has deployment completed successfully? (y/n): " DEPLOYED
if [[ ! "$DEPLOYED" =~ ^[Yy]$ ]]; then
    echo ""
    echo "Check the deployment logs in Railway dashboard."
    echo "The custom Dockerfile should resolve the pip issues."
    exit 1
fi

echo ""
echo "üéâ DEPLOYMENT COMPLETE!"
echo "======================"

echo ""
echo "üåê Your Application:"
echo "- Main App: Check your Railway project URL"
echo "- API: /api/v1/"
echo "- Health: /health"
echo "- Docs: /docs"
echo ""

echo "üîß What the Dockerfile does:"
echo "- ‚úÖ Installs Python and Node.js"
echo "- ‚úÖ Builds React frontend"
echo "- ‚úÖ Copies frontend to backend static files"
echo "- ‚úÖ Starts FastAPI server that serves both"
echo ""

echo "üöÄ This approach avoids all Nixpacks issues!"
echo ""
echo "‚úÖ Success! Your LinkedIn Recommendation Writer is live! üéâ"

# Environment Configuration Template for LinkedIn Recommendation Writer
# Copy this file to .env and fill in your actual values

# ==============================================
# REQUIRED API KEYS
# ==============================================

# GitHub Personal Access Token
# Get one from: https://github.com/settings/tokens
# Scopes needed: repo, read:org, read:user
GITHUB_TOKEN=your_github_token_here

# Google Gemini AI API Key
# Get one from: https://makersuite.google.com/app/apikey
GEMINI_API_KEY=your_gemini_api_key_here

# Gemini Model
GEMINI_MODEL=gemini-2.5-flash-lite

# ==============================================
# DATABASE CONFIGURATION
# ==============================================

# PostgreSQL Database Settings
POSTGRES_DB=github_recommender
POSTGRES_USER=postgres
POSTGRES_PASSWORD=your_secure_password_here
POSTGRES_PORT=5432

# Database URL (auto-constructed from above values in Docker)
# DATABASE_URL=postgresql+asyncpg://postgres:password@localhost:5432/github_recommender

# ==============================================
# REDIS CONFIGURATION
# ==============================================

# Redis Cache Settings
REDIS_PORT=6379
# REDIS_URL=redis://localhost:6379/0

# ==============================================
# FRONTEND CONFIGURATION
# ==============================================

# Frontend API Configuration
VITE_API_BASE_URL=http://localhost:8000
VITE_API_TIMEOUT=30000

# Node Environment
NODE_ENV=development

# ==============================================
# BACKEND API CONFIGURATION
# ==============================================

# API Server Settings
API_HOST=0.0.0.0
API_PORT=8000
API_DEBUG=false
API_RELOAD=true

# Logging Level (debug, info, warning, error, critical)
LOG_LEVEL=info

# ==============================================
# CORS CONFIGURATION
# ==============================================

# Allowed Origins for CORS (comma-separated)
# Development
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,http://127.0.0.1:3000,http://127.0.0.1:5173

# Production (uncomment and modify for production)
# ALLOWED_ORIGINS=https://yourdomain.com,https://www.yourdomain.com

# ==============================================
# DATABASE INITIALIZATION
# ==============================================

# Initialize database on startup (true/false)
INIT_DB=true

# Run database migrations (true/false)
RUN_MIGRATIONS=false

# ==============================================
# SECURITY (PRODUCTION ONLY)
# ==============================================

# Secret key for sessions and JWT tokens (generate a secure random string)
# Use: openssl rand -hex 32
# SECRET_KEY=your_32_character_secret_key_here

# ==============================================
# DOCKER COMPOSE PROFILES
# ==============================================

# Uncomment to enable specific profiles
# COMPOSE_PROFILES=development
# COMPOSE_PROFILES=production

# ==============================================
# EXAMPLE VALUES (REMOVE IN PRODUCTION)
# ==============================================

# Example GitHub token format (replace with your actual token):
# GITHUB_TOKEN=ghp_1234567890abcdef1234567890abcdef12345678

# Example Gemini API key format (replace with your actual key):
# GEMINI_API_KEY=AIzaSyDfVvWg0oK46v8b0YF5Qb2Sd3Z7H8_J9K0

# Example secret key format:
# SECRET_KEY=a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456

# ==============================================
# DEVELOPMENT VS PRODUCTION NOTES
# ==============================================

# For development:
# - Use the main docker-compose.yml
# - Set API_DEBUG=true, API_RELOAD=true
# - Set LOG_LEVEL=debug or info
# - Use localhost URLs for ALLOWED_ORIGINS

# For production:
# - Use docker-compose.prod.yml
# - Set API_DEBUG=false, API_RELOAD=false
# - Set LOG_LEVEL=warning or error
# - Use your actual domain for ALLOWED_ORIGINS
# - Set a secure SECRET_KEY
# - Use strong passwords for POSTGRES_PASSWORD

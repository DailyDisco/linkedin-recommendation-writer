# Production Docker Compose for LinkedIn Recommendation Writer
# Extends the base docker-compose.yml for a DRY configuration.
version: '3.8'

services:
  # Nginx Reverse Proxy (Production Only)
  nginx:
    image: nginx:alpine
    container_name: linkedin-recommender-nginx
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro # For SSL certificates
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - app
    networks:
      - linkedin-recommender-network
    restart: always

  # Main application service (Production Overrides)
  app:
    extends:
      file: docker-compose.yml
      service: app
    build:
      target: production # Use the lean production stage
    container_name: linkedin-recommender-app-prod
    ports: [] # Unset development ports
    expose:
      - '8000' # Expose internally for Nginx
    volumes: [] # Production should be stateless, no source code mounts
    command: '' # Unset dev command, use the one from the Dockerfile
    restart: always
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

  # PostgreSQL Database (Production Overrides)
  postgres:
    extends:
      file: docker-compose.yml
      service: postgres
    container_name: linkedin-recommender-postgres-prod
    ports: [] # Do not expose database to host in production
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups # Mount a backups volume
    command: > # Production-tuned PostgreSQL settings
      postgres
      -c max_connections=200
      -c shared_buffers=512MB
      -c effective_cache_size=2GB
      -c maintenance_work_mem=128MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100

  # Redis Cache (Production Overrides)
  redis:
    extends:
      file: docker-compose.yml
      service: redis
    container_name: linkedin-recommender-redis-prod
    ports: [] # Do not expose redis to host in production
    command: > # Production-tuned Redis settings
      redis-server
      --appendonly yes
      --maxmemory 1gb
      --maxmemory-policy allkeys-lru

# Named volumes for data persistence
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

# Custom network
networks:
  linkedin-recommender-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
